pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'sonarqube-server'
        SONARQUBE_PROJECT_KEY = 'TalibiMart'
        SONARQUBE_LOGIN_TOKEN = 'sqa_f75f65762c06763e9bb20a4100678bc3edd675a9'
        SONARQUBE_HOST_URL = 'http://sonarqube:9000'
        DOCKER_IMAGE = 'talibimart'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/AbderrahimTalibi/TalibiMart.git'
                    ]]
                ])
            }
        }
        // stage('Checkout') {
        //     steps {
        //         git branch: 'main',
        //             url: 'https://github.com/AbderrahimTalibi/TalibiMart'
        //     }
        // }

        stage('Code Analysis') {
            steps {
                withSonarQubeEnv(installationName: "${SONARQUBE_SERVER}") {
                    sh """
                        ${tool 'SonarScanner'}/bin/sonar-scanner \\
                        -Dsonar.projectKey=${SONARQUBE_PROJECT_KEY} \\
                        -Dsonar.sources=. \\
                        -Dsonar.host.url=${SONARQUBE_HOST_URL} \\
                        -Dsonar.login=${SONARQUBE_LOGIN_TOKEN}
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Notify') {
            steps {
                mail to: 'abderrahimtalibi0gmail.com',
                    subject: "New Release Deployed",
                    body: """\
                Hello,

                A new release of the project has been successfully pushed to production.

                Best regards,
                Jenkins
                 """
            }
        }
    }
}